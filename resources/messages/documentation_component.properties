# Properties
property.name=<b>Required</b><br/><p>The internal name of the component.</p>\
                                              <p>The total number of \\ or / characters in the name of the component is called the level of the component. Any component with a level of 1 or more is a child component. The component listed before the child component with a level of 1 less than the child component, is the parent component. Other components with the same parent component as the child component are sibling components.</p>\
                                              <p>A child component can't be selected if its parent component isn't selected. A parent component can't be selected if none of its children are selected, unless a <tt>Components</tt> parameter directly references the parent component or the parent component includes the <tt>checkablealone</tt> flag.</p>\
                                              <p>If sibling components have the <tt>exclusive</tt> flag, only one of them can be selected.</p>\
                                              <div class="examplebox">\
                                              <div class="exampleheader">Example:</div>\
                                              <pre class="nomargin">Name: "help"</pre>\
                                              </div>
property.description=<b>Required</b><br/><p>The description of the component, which can include constants. This description is shown to the end user during installation.</p>\
                                                     <div class="examplebox">\
                                                     <div class="exampleheader">Example:</div>\
                                                     <pre class="nomargin">Description: "Help Files"</pre>\
                                                     </div>
property.types=<p>A space separated list of types this component belongs to. If the end user selects a type from this list, this component will be installed.</p>\
                           <p>If the <tt>fixed</tt> flag isn't used (see below), any custom types (types using the <tt>iscustom</tt> flag) in this list are ignored by Setup.</p>\
                           <div class="examplebox">\
                           <div class="exampleheader">Example:</div>\
                           <pre class="nomargin">Types: full compact</pre>\
                           </div>
property.extradiskspacerequired=<p>The extra disk space required by this component, similar to the <a href="topic_setup_extradiskspacerequired.htm">ExtraDiskSpaceRequired</a> directive for the [Setup] section.</p>\
                                               <div class="examplebox">\
                                               <div class="exampleheader">Example:</div>\
                                               <pre class="nomargin">ExtraDiskSpaceRequired: 0</pre>\
                                               </div>
property.flags=This parameter is a set of extra options. Multiple options may be used by separating them by spaces.

# Flags
flags.checkablealone=<p>Specifies that the component can be checked when none of its children are. By default, if no <tt>Components</tt> parameter directly references the component, unchecking all of the component's children will cause the component to become unchecked.</p>
flags.dontinheritcheck=<p>Specifies that the component should not automatically become checked when its parent is checked. Has no effect on top-level components, and cannot be combined with the <tt>exclusive</tt> flag.</p>
flags.exclusive=<p>Instructs Setup that this component is mutually exclusive with sibling components that also have the <tt>exclusive</tt> flag.</p>
flags.fixed=<p>Instructs Setup that this component can not be manually selected or unselected by the end user during installation.</p>
flags.restart=<p>Instructs Setup to ask the user to restart the system if this component is installed, regardless of whether this is necessary (for example because of [Files] section entries with the <tt>restartreplace</tt> flag). Like <a href="topic_setup_alwaysrestart.htm">AlwaysRestart</a> but per component.</p>
flags.disablenouninstallwarning=<p>Instructs Setup not to warn the user that this component will not be uninstalled after he/she deselected this component when it's already installed on his/her machine.</p>\
                                             <p>Depending on the complexity of your components, you can try to use the [InstallDelete] section and this flag to automatically 'uninstall' deselected components.</p>