# Properties
property.name=<p>The name and location of the shortcut to create. Any of the shell folder constants or directory constants may be used in this parameter.</p>\
                   <p>Keep in mind that shortcuts are stored as literal files so any characters not allowed in normal filenames can't be used here. Also, because it's not possible to have two files with the same name, it's therefore not possible to have two shortcuts with the same name.</p>
property.filename=<p>The command line filename for the shortcut, which normally begins with a directory constant.</p>\
                       <p>In addition to file and folder names, URLs (web site addresses) may also be specified. When a URL is specified, Setup will create an "Internet Shortcut" (.url) file, and ignore the <tt>Parameters</tt>, <tt>WorkingDir</tt>, <tt>HotKey</tt>, and <tt>Comment</tt> parameters.</p>\
                       <p>On 64-bit Windows, note that the <tt>{sys}</tt> constant will map to the native 64-bit System directory when the shortcut is launched by a 64-bit process, such as Windows Explorer. This is true regardless of whether the install is running in <a href="topic_32vs64bitinstalls.htm">64-bit mode</a>. To create a shortcut that always points to the 32-bit System directory, use <tt>{syswow64}</tt> instead. (The same applies to the <tt>WorkingDir</tt> and <tt>IconFilename</tt> parameters.)</p>
property.parameters=<p>Optional command line parameters for the shortcut, which can include constants.</p>
property.workingdir=<p>The working (or <i>Start In</i>) directory for the shortcut, which specifies the initial current directory for the program. This parameter can include constants.</p>\
                         <p>If this parameter is not specified or is blank, Setup will try to extract a directory name from the <tt>Filename</tt> parameter. If that fails (unlikely), the working directory will be set to <tt>{sys}</tt>.</p>
property.hotkey=<p>The hot key (or "shortcut key") setting for the shortcut, which is a combination of keys with which the program can be started.</p>\
                     <p>Note: If you change the shortcut key and reinstall the application, Windows may continue to recognize old shortcut key(s) until you log off and back on or restart the system.</p>
property.comment=<p>Specifies the <i>Comment</i> (or "description") field of the shortcut, which determines the popup hint for it. This parameter can include constants.</p>
property.iconfilename=<p>The filename of a custom icon (located on the user's system) to be displayed. This can be an executable image (.exe, .dll) containing icons or a .ico file. If this parameter is not specified or is blank, Windows will use the file's default icon. This parameter can include constants.</p>
property.iconindex=<p>Zero-based index of the icon to use in the file specified by <tt>IconFilename</tt>. Defaults to <tt>0</tt>.</p>\
                        <p>If <tt>IconIndex</tt> is non-zero and <tt>IconFilename</tt> is not specified or is blank, it will act as if <tt>IconFilename</tt> is the same as <tt>Filename</tt>.</p>
property.appusermodelid=<p>Specifies the Windows 7 Application User Model ID for the shortcut. Ignored on earlier Windows versions. This parameter can include constants.</p>
property.flags=<p>This parameter is a set of extra options. Multiple options may be used by separating them by spaces.</p>

# Flags
flags.closeonexit=<p>When this flag is set, Setup will set the "Close on Exit" property of the shortcut. This flag only has an effect if the shortcut points to an MS-DOS application (if it has a .pif extension, to be specific). If neither this flag nor the <tt>dontcloseonexit</tt> flags are specified, Setup will not attempt to change the "Close on Exit" property.</p>
flags.createonlyiffileexists=<p>When this flag is set, the installer will only try to create the icon if the file specified by the <tt>Filename</tt> parameter exists.</p>
flags.dontcloseonexit=<p>Same as <tt>closeonexit</tt>, except it causes Setup to uncheck the "Close on Exit" property.</p>
flags.excludefromshowinnewinstall=<p>Prevents the Start menu entry for the new shortcut from receiving a highlight on Windows 7 and additionally prevents the new shortcut from being automatically pinned the Start screen on Windows 8 (or later). Ignored on earlier Windows versions.</p>
flags.foldershortcut=<p>Creates a special type of shortcut known as a "Folder Shortcut". Normally, when a shortcut to a folder is present on the Start Menu, clicking the item causes a separate Explorer window to open showing the target folder's contents. In contrast, a "folder shortcut" will show the contents of the target folder as a submenu instead of opening a separate window.</p>\
                         <p>This flag is currently ignored when running on Windows 7 (or later), as folder shortcuts do not expand properly on the Start Menu anymore. It is not known whether this is a bug in Windows 7 or a removed feature.</p>\
                         <p>When this flag is used, a folder name must be specified in the <tt>Filename</tt> parameter. Specifying the name of a file will result in a non-working shortcut.</p>
flags.preventpinning=<p>Prevents a Start menu entry from being pinnable to Taskbar or the Start Menu on Windows 7 (or later). This also makes the entry ineligible for inclusion in the Start menu's Most Frequently Used (MFU) list. Ignored on earlier Windows versions.</p>
flags.runmaximized=<p>When this flag is set, Setup sets the "Run" setting of the icon to "Maximized" so that the program will be initially maximized when it is started.</p>
flags.runminimized=<p>When this flag is set, Setup sets the "Run" setting of the icon to "Minimized" so that the program will be initially minimized when it is started.</p>
flags.uninsneveruninstall=<p>Instructs the uninstaller not to delete the icon.</p>
flags.useapppaths=<p>When this flag is set, specify just a filename (no path) in the <tt>Filename</tt> parameter, and Setup will retrieve the pathname from the "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths" registry key and prepend it to the filename automatically.</p>
