# Properties
property.filename=<p>The name of the .INI file you want Setup to modify, which can include constants. If this parameter does not include a path, it will write to the Windows directory. If this parameter is blank, it will write to WIN.INI in the Windows directory.</p>
property.section=<p>The name of the section in which to create the entry, which can include constants.</p>
property.key=<p>The name of the key to set, which can include constants. If this parameter is not specified or is blank, no key is created.</p>
property.string=<p>The value to assign to the key, which can use constants. If this parameter is not specified, no key is created.</p>
property.flags=<p>This parameter is a set of extra options. Multiple options may be used by separating them by spaces.</p>

# Flags
flags.createkeyifdoesntexist=<p>Assign to the key <i>only</i> if the key doesn't already exist in the file. If this flag is <i>not</i> specified, the key will be set regardless of whether it already existed.</p>
flags.uninsdeleteentry=<p>Delete the entry when the program is uninstalled. This can be combined with the <tt>uninsdeletesectionifempty</tt> flag.</p>
flags.uninsdeletesection=<p>When the program is uninstalled, delete the entire section in which the entry is located. It obviously wouldn't be a good idea to use this on a section that is used by Windows itself (like some of the sections in WIN.INI). You should only use this on sections private to your application.</p>
flags.uninsdeletesectionifempty=<p>Same as <tt>uninsdeletesection</tt>, but deletes the section only if there are no keys left in it. This can be combined with the <tt>uninsdeleteentry</tt> flag.</p>
